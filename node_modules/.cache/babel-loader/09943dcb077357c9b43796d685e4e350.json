{"ast":null,"code":"import { FORM_SUBMITTED, RIGHT_CARD_CLICKED, WRONG_CARD_CLICKED } from '../actions/types';\nexport function formSubmission() {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FORM_SUBMITTED:\n      return action.suits;\n\n    default:\n      return previousState;\n  }\n}\nexport function cards() {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RIGHT_CARD_CLICKED:\n      return Object.assign({}, previousState.map(function (card) {\n        if (card.type === action.card) {\n          return Object.assign({}, card, {\n            completed: true\n          });\n        }\n\n        return card;\n      }), {\n        numCorrect: action.numCorrect + 1\n      });\n\n    case WRONG_CARD_CLICKED:\n      return Object.assign({}, previousState.map(function (card) {\n        return Object.assign({}, card, {\n          completed: false\n        });\n      }), {\n        numCorrect: 0\n      });\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Rover\\Desktop\\Coding\\Card-Memory-Game\\src\\reducers\\reducers.js"],"names":["FORM_SUBMITTED","RIGHT_CARD_CLICKED","WRONG_CARD_CLICKED","formSubmission","previousState","action","type","suits","cards","Object","assign","map","card","completed","numCorrect"],"mappings":"AAAA,SACIA,cADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,QAIO,kBAJP;AAMA,OAAO,SAASC,cAAT,GAAmD;AAAA,MAA3BC,aAA2B,uEAAX,EAAW;AAAA,MAAPC,MAAO;;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,cAAL;AACI,aAAOK,MAAM,CAACE,KAAd;;AACJ;AACI,aAAOH,aAAP;AAJR;AAMH;AAED,OAAO,SAASI,KAAT,GAA0C;AAAA,MAA3BJ,aAA2B,uEAAX,EAAW;AAAA,MAAPC,MAAO;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,kBAAL;AACQ,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EACHN,aAAa,CAACO,GAAd,CAAkB,UAACC,IAAD,EAAU;AACxB,YAAGA,IAAI,CAACN,IAAL,KAAcD,MAAM,CAACO,IAAxB,EAA6B;AACzB,iBAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,IAAlB,EAAwB;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAxB,CAAP;AACH;;AACD,eAAOD,IAAP;AACH,OALD,CADG,EAOH;AAAEE,QAAAA,UAAU,EAAET,MAAM,CAACS,UAAP,GAAoB;AAAlC,OAPG,CAAP;;AAQR,SAAKZ,kBAAL;AACI,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EACHN,aAAa,CAACO,GAAd,CAAkB,UAACC,IAAD,EAAU;AACxB,eAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,IAAlB,EAAwB;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAxB,CAAP;AACH,OAFD,CADG,EAIH;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAJG,CAAP;;AAKJ;AACI,aAAOV,aAAP;AAjBR;AAmBH","sourcesContent":["import {\r\n    FORM_SUBMITTED,\r\n    RIGHT_CARD_CLICKED,\r\n    WRONG_CARD_CLICKED\r\n} from '../actions/types';\r\n\r\nexport function formSubmission(previousState = [], action){\r\n    switch(action.type){\r\n        case FORM_SUBMITTED:\r\n            return action.suits\r\n        default:\r\n            return previousState;\r\n    }\r\n}\r\n\r\nexport function cards(previousState = [], action){\r\n    switch(action.type){\r\n        case RIGHT_CARD_CLICKED:\r\n                return Object.assign({},\r\n                    previousState.map((card) => {\r\n                        if(card.type === action.card){\r\n                            return Object.assign({}, card, {completed: true});\r\n                        }\r\n                        return card;\r\n                    }),\r\n                    { numCorrect: action.numCorrect + 1 });\r\n        case WRONG_CARD_CLICKED:\r\n            return Object.assign({},\r\n                previousState.map((card) => {\r\n                    return Object.assign({}, card, { completed: false })\r\n                }),\r\n                { numCorrect: 0 });\r\n        default:\r\n            return previousState;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}