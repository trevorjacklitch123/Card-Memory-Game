{"ast":null,"code":"import { FORM_SUBMITTED, RIGHT_CARD_CLICKED, WRONG_CARD_CLICKED } from '../actions/types';\nexport function formSubmission() {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    correctOrder: [],\n    actualOrder: [],\n    numCorrect: 0\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FORM_SUBMITTED:\n      return action.initialState;\n\n    default:\n      return previousState;\n  }\n}\nexport function cards() {\n  var previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    correctOrder: [],\n    actualOrder: [],\n    numCorrect: 0\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RIGHT_CARD_CLICKED:\n      return Object.assign({}, previousState, previousState.actualOrder.map(function (card) {\n        if (card.type === action.card) {\n          return Object.assign({}, card, {\n            correct: true\n          });\n        }\n\n        return card;\n      }), {\n        numCorrect: previousState.numCorrect + 1\n      });\n\n    case WRONG_CARD_CLICKED:\n      return Object.assign({}, previousState, previousState.actualOrder.map(function (card) {\n        return Object.assign({}, card, {\n          correct: false\n        });\n      }), {\n        numCorrect: 0\n      });\n\n    default:\n      return previousState;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Rover\\Desktop\\Coding\\Card-Memory-Game\\src\\reducers\\reducers.js"],"names":["FORM_SUBMITTED","RIGHT_CARD_CLICKED","WRONG_CARD_CLICKED","formSubmission","previousState","correctOrder","actualOrder","numCorrect","action","type","initialState","cards","Object","assign","map","card","correct"],"mappings":"AAAA,SACIA,cADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,QAIO,kBAJP;AAMA,OAAO,SAASC,cAAT,GAAmG;AAAA,MAA3EC,aAA2E,uEAA3D;AAACC,IAAAA,YAAY,EAAE,EAAf;AAAmBC,IAAAA,WAAW,EAAE,EAAhC;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAA2D;AAAA,MAAPC,MAAO;;AACtG,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,cAAL;AACI,aAAOQ,MAAM,CAACE,YAAd;;AACJ;AACI,aAAON,aAAP;AAJR;AAMH;AAED,OAAO,SAASO,KAAT,GAA0F;AAAA,MAA3EP,aAA2E,uEAA3D;AAACC,IAAAA,YAAY,EAAE,EAAf;AAAmBC,IAAAA,WAAW,EAAE,EAAhC;AAAoCC,IAAAA,UAAU,EAAE;AAAhD,GAA2D;AAAA,MAAPC,MAAO;;AAC7F,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,kBAAL;AACQ,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EACHT,aADG,EAEHA,aAAa,CAACE,WAAd,CAA0BQ,GAA1B,CAA8B,UAACC,IAAD,EAAU;AACpC,YAAGA,IAAI,CAACN,IAAL,KAAcD,MAAM,CAACO,IAAxB,EAA6B;AACzB,iBAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,IAAlB,EAAwB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAxB,CAAP;AACH;;AACD,eAAOD,IAAP;AACH,OALD,CAFG,EAQH;AAAER,QAAAA,UAAU,EAAEH,aAAa,CAACG,UAAd,GAA2B;AAAzC,OARG,CAAP;;AAUR,SAAKL,kBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EACHT,aADG,EAEHA,aAAa,CAACE,WAAd,CAA0BQ,GAA1B,CAA8B,UAACC,IAAD,EAAU;AACpC,eAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBE,IAAlB,EAAwB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAxB,CAAP;AACH,OAFD,CAFG,EAKH;AAAET,QAAAA,UAAU,EAAE;AAAd,OALG,CAAP;;AAMJ;AACI,aAAOH,aAAP;AApBR;AAsBH","sourcesContent":["import {\r\n    FORM_SUBMITTED,\r\n    RIGHT_CARD_CLICKED,\r\n    WRONG_CARD_CLICKED\r\n} from '../actions/types';\r\n\r\nexport function formSubmission(previousState = {correctOrder: [], actualOrder: [], numCorrect: 0}, action){\r\n    switch(action.type){\r\n        case FORM_SUBMITTED:\r\n            return action.initialState;\r\n        default:\r\n            return previousState;\r\n    }\r\n}\r\n\r\nexport function cards(previousState = {correctOrder: [], actualOrder: [], numCorrect: 0}, action){\r\n    switch(action.type){\r\n        case RIGHT_CARD_CLICKED:\r\n                return Object.assign({},\r\n                    previousState,\r\n                    previousState.actualOrder.map((card) => {\r\n                        if(card.type === action.card){\r\n                            return Object.assign({}, card, {correct: true});\r\n                        }\r\n                        return card;\r\n                    }),\r\n                    { numCorrect: previousState.numCorrect + 1 }\r\n                );\r\n        case WRONG_CARD_CLICKED:\r\n            return Object.assign({},\r\n                previousState,\r\n                previousState.actualOrder.map((card) => {\r\n                    return Object.assign({}, card, { correct: false });\r\n                }),\r\n                { numCorrect: 0 });\r\n        default:\r\n            return previousState;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}