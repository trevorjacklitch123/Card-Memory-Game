{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rover\\\\Desktop\\\\Coding\\\\Card-Memory-Game\\\\src\\\\components\\\\CardList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card.js';\n\nvar CardList = function CardList(_ref) {\n  var cards = _ref.cards;\n  return React.createElement(\"div\", {\n    id: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, cards.map(function (card, index) {\n    return React.createElement(Card, {\n      key: index,\n      card: card.type,\n      correct: card.correct,\n      onClick: onClick(card),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }));\n};\n\nfunction onClick(card, correctOrder, numCorrect) {\n  var nextCard = correctOrder[numCorrect];\n\n  if (card === nextCard) {\n    this.props.rightCardClicked(card);\n    this.props.numCorrectIncrement();\n  } else {\n    this.props.wrongCardClicked();\n    this.props.numCorrectReset();\n  }\n}\n\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    correct: PropTypes.bool.isRequired\n  }).isRequired).isRequired,\n  correctOrder: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  numCorrect: PropTypes.number.isRequired,\n  rightCardClicked: PropTypes.func.isRequired,\n  wrongCardClicked: PropTypes.func.isRequired,\n  numCorrectIncrement: PropTypes.func.isRequired,\n  numCorrectReset: PropTypes.func.isRequired\n};\nexport default CardList;","map":{"version":3,"sources":["C:\\Users\\Rover\\Desktop\\Coding\\Card-Memory-Game\\src\\components\\CardList.js"],"names":["React","PropTypes","Card","CardList","cards","map","card","index","type","correct","onClick","correctOrder","numCorrect","nextCard","props","rightCardClicked","numCorrectIncrement","wrongCardClicked","numCorrectReset","propTypes","arrayOf","shape","string","isRequired","bool","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACb;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACP,oBAAC,IAAD;AACA,MAAA,GAAG,EAAEA,KADL;AAEA,MAAA,IAAI,EAAED,IAAI,CAACE,IAFX;AAGA,MAAA,OAAO,EAAEF,IAAI,CAACG,OAHd;AAIA,MAAA,OAAO,EAAEC,OAAO,CAACJ,IAAD,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAV,CADL,CADa;AAAA,CAAjB;;AAaA,SAASI,OAAT,CAAiBJ,IAAjB,EAAuBK,YAAvB,EAAqCC,UAArC,EAAgD;AAC5C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,UAAD,CAA7B;;AAEA,MAAGN,IAAI,KAAKO,QAAZ,EAAqB;AACjB,SAAKC,KAAL,CAAWC,gBAAX,CAA4BT,IAA5B;AACA,SAAKQ,KAAL,CAAWE,mBAAX;AACH,GAHD,MAII;AACA,SAAKF,KAAL,CAAWG,gBAAX;AACA,SAAKH,KAAL,CAAWI,eAAX;AACH;AACJ;;AAEDf,QAAQ,CAACgB,SAAT,GAAqB;AACjBf,EAAAA,KAAK,EAAEH,SAAS,CAACmB,OAAV,CACHnB,SAAS,CAACoB,KAAV,CAAgB;AACZb,IAAAA,IAAI,EAAEP,SAAS,CAACqB,MAAV,CAAiBC,UADX;AAEZd,IAAAA,OAAO,EAAER,SAAS,CAACuB,IAAV,CAAeD;AAFZ,GAAhB,EAGGA,UAJA,EAKLA,UANe;AAOjBZ,EAAAA,YAAY,EAAEV,SAAS,CAACmB,OAAV,CACVnB,SAAS,CAACqB,MAAV,CAAiBC,UADP,EAEZA,UATe;AAUjBX,EAAAA,UAAU,EAAEX,SAAS,CAACwB,MAAV,CAAiBF,UAVZ;AAYjBR,EAAAA,gBAAgB,EAAEd,SAAS,CAACyB,IAAV,CAAeH,UAZhB;AAajBN,EAAAA,gBAAgB,EAAEhB,SAAS,CAACyB,IAAV,CAAeH,UAbhB;AAcjBP,EAAAA,mBAAmB,EAAEf,SAAS,CAACyB,IAAV,CAAeH,UAdnB;AAejBL,EAAAA,eAAe,EAAEjB,SAAS,CAACyB,IAAV,CAAeH;AAff,CAArB;AAkBA,eAAepB,QAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ cards }) => (\r\n    <div id=\"grid-container\">\r\n        {cards.map((card, index) => (\r\n            <Card\r\n            key={index}\r\n            card={card.type}\r\n            correct={card.correct}\r\n            onClick={onClick(card)}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nfunction onClick(card, correctOrder, numCorrect){\r\n    const nextCard = correctOrder[numCorrect];\r\n    \r\n    if(card === nextCard){\r\n        this.props.rightCardClicked(card);\r\n        this.props.numCorrectIncrement();\r\n    }\r\n    else{\r\n        this.props.wrongCardClicked();\r\n        this.props.numCorrectReset();\r\n    }\r\n}\r\n\r\nCardList.propTypes = {\r\n    cards: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            type: PropTypes.string.isRequired,\r\n            correct: PropTypes.bool.isRequired\r\n        }).isRequired\r\n    ).isRequired,\r\n    correctOrder: PropTypes.arrayOf(\r\n        PropTypes.string.isRequired\r\n    ).isRequired,\r\n    numCorrect: PropTypes.number.isRequired,\r\n    \r\n    rightCardClicked: PropTypes.func.isRequired,\r\n    wrongCardClicked: PropTypes.func.isRequired,\r\n    numCorrectIncrement: PropTypes.func.isRequired,\r\n    numCorrectReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}