{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rover\\\\Desktop\\\\Coding\\\\Card-Memory-Game\\\\src\\\\components\\\\CardList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card.js';\n\nvar CardList = function CardList(_ref) {\n  var cards = _ref.cards,\n      correctOrder = _ref.correctOrder,\n      numCorrect = _ref.numCorrect,\n      rightCardClicked = _ref.rightCardClicked,\n      wrongCardClicked = _ref.wrongCardClicked,\n      numCorrectIncrement = _ref.numCorrectIncrement,\n      numCorrectReset = _ref.numCorrectReset;\n  return React.createElement(\"div\", {\n    id: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, cards.map(function (card, index) {\n    return React.createElement(Card, {\n      key: index,\n      card: card.type,\n      correct: card.correct,\n      onClick: function onClick(e, card) {\n        return _onClick(e, card, correctOrder, numCorrect, rightCardClicked, wrongCardClicked, numCorrectIncrement, numCorrectReset);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }));\n};\n\nfunction _onClick(e, card, correctOrder, numCorrect, rightCardClicked, wrongCardClicked, numCorrectIncrement, numCorrectReset) {\n  var nextCard = correctOrder[numCorrect];\n  console.log(e, nextCard);\n\n  if (card === nextCard) {\n    rightCardClicked(card);\n    numCorrectIncrement();\n  } else {\n    wrongCardClicked();\n    numCorrectReset();\n  }\n}\n\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    correct: PropTypes.bool.isRequired\n  }).isRequired).isRequired,\n  correctOrder: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  numCorrect: PropTypes.number.isRequired,\n  rightCardClicked: PropTypes.func.isRequired,\n  wrongCardClicked: PropTypes.func.isRequired,\n  numCorrectIncrement: PropTypes.func.isRequired,\n  numCorrectReset: PropTypes.func.isRequired\n};\nexport default CardList;","map":{"version":3,"sources":["C:\\Users\\Rover\\Desktop\\Coding\\Card-Memory-Game\\src\\components\\CardList.js"],"names":["React","PropTypes","Card","CardList","cards","correctOrder","numCorrect","rightCardClicked","wrongCardClicked","numCorrectIncrement","numCorrectReset","map","card","index","type","correct","e","onClick","nextCard","console","log","propTypes","arrayOf","shape","string","isRequired","bool","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,YAAV,QAAUA,YAAV;AAAA,MAAwBC,UAAxB,QAAwBA,UAAxB;AAAA,MAAoCC,gBAApC,QAAoCA,gBAApC;AAAA,MAAsDC,gBAAtD,QAAsDA,gBAAtD;AAAA,MAAwEC,mBAAxE,QAAwEA,mBAAxE;AAAA,MAA6FC,eAA7F,QAA6FA,eAA7F;AAAA,SACb;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,WACP,oBAAC,IAAD;AACA,MAAA,GAAG,EAAEA,KADL;AAEA,MAAA,IAAI,EAAED,IAAI,CAACE,IAFX;AAGA,MAAA,OAAO,EAAEF,IAAI,CAACG,OAHd;AAIA,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAIJ,IAAJ;AAAA,eAAaK,QAAO,CAACD,CAAD,EAAIJ,IAAJ,EAAUP,YAAV,EAAwBC,UAAxB,EAAoCC,gBAApC,EAAsDC,gBAAtD,EAAwEC,mBAAxE,EAA6FC,eAA7F,CAApB;AAAA,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAV,CADL,CADa;AAAA,CAAjB;;AAaA,SAASO,QAAT,CAAiBD,CAAjB,EAAoBJ,IAApB,EAA0BP,YAA1B,EAAwCC,UAAxC,EAAoDC,gBAApD,EAAsEC,gBAAtE,EAAwFC,mBAAxF,EAA6GC,eAA7G,EAA6H;AACzH,MAAMQ,QAAQ,GAAGb,YAAY,CAACC,UAAD,CAA7B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAeE,QAAf;;AAEA,MAAGN,IAAI,KAAKM,QAAZ,EAAqB;AACjBX,IAAAA,gBAAgB,CAACK,IAAD,CAAhB;AACAH,IAAAA,mBAAmB;AACtB,GAHD,MAII;AACAD,IAAAA,gBAAgB;AAChBE,IAAAA,eAAe;AAClB;AACJ;;AAEDP,QAAQ,CAACkB,SAAT,GAAqB;AACjBjB,EAAAA,KAAK,EAAEH,SAAS,CAACqB,OAAV,CACHrB,SAAS,CAACsB,KAAV,CAAgB;AACZT,IAAAA,IAAI,EAAEb,SAAS,CAACuB,MAAV,CAAiBC,UADX;AAEZV,IAAAA,OAAO,EAAEd,SAAS,CAACyB,IAAV,CAAeD;AAFZ,GAAhB,EAGGA,UAJA,EAKLA,UANe;AAOjBpB,EAAAA,YAAY,EAAEJ,SAAS,CAACqB,OAAV,CACVrB,SAAS,CAACuB,MAAV,CAAiBC,UADP,EAEZA,UATe;AAUjBnB,EAAAA,UAAU,EAAEL,SAAS,CAAC0B,MAAV,CAAiBF,UAVZ;AAYjBlB,EAAAA,gBAAgB,EAAEN,SAAS,CAAC2B,IAAV,CAAeH,UAZhB;AAajBjB,EAAAA,gBAAgB,EAAEP,SAAS,CAAC2B,IAAV,CAAeH,UAbhB;AAcjBhB,EAAAA,mBAAmB,EAAER,SAAS,CAAC2B,IAAV,CAAeH,UAdnB;AAejBf,EAAAA,eAAe,EAAET,SAAS,CAAC2B,IAAV,CAAeH;AAff,CAArB;AAkBA,eAAetB,QAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ cards, correctOrder, numCorrect, rightCardClicked, wrongCardClicked, numCorrectIncrement, numCorrectReset }) => (\r\n    <div id=\"grid-container\">\r\n        {cards.map((card, index) => (\r\n            <Card\r\n            key={index}\r\n            card={card.type}\r\n            correct={card.correct}\r\n            onClick={(e, card) => onClick(e, card, correctOrder, numCorrect, rightCardClicked, wrongCardClicked, numCorrectIncrement, numCorrectReset)}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nfunction onClick(e, card, correctOrder, numCorrect, rightCardClicked, wrongCardClicked, numCorrectIncrement, numCorrectReset){\r\n    const nextCard = correctOrder[numCorrect];\r\n    console.log(e, nextCard);\r\n    \r\n    if(card === nextCard){\r\n        rightCardClicked(card);\r\n        numCorrectIncrement();\r\n    }\r\n    else{\r\n        wrongCardClicked();\r\n        numCorrectReset();\r\n    }\r\n}\r\n\r\nCardList.propTypes = {\r\n    cards: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            type: PropTypes.string.isRequired,\r\n            correct: PropTypes.bool.isRequired\r\n        }).isRequired\r\n    ).isRequired,\r\n    correctOrder: PropTypes.arrayOf(\r\n        PropTypes.string.isRequired\r\n    ).isRequired,\r\n    numCorrect: PropTypes.number.isRequired,\r\n    \r\n    rightCardClicked: PropTypes.func.isRequired,\r\n    wrongCardClicked: PropTypes.func.isRequired,\r\n    numCorrectIncrement: PropTypes.func.isRequired,\r\n    numCorrectReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}